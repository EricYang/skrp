<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark"  
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:x2="x2.*"
	width="890" height="535" 
	 
	preinitialize="{iR=Fun.getLang('Staff')}"
  	creationComplete="init()"	
	>
	<fx:Script>
		<![CDATA[

			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.utils.StringUtil;
			
			import x2.*;
			
			[Bindable]
			private var iR:Object;
			[Bindable]
			private var is_app:String = Fun.sApp;
			[Bindable]
			private var i_session:Object = Fun.readJson(is_app, {type:"getSession", sessionName:["usersSn","userType","academicYear","semester","schoolDSn"]});
			[Bindable]
			private var idw_master:DW, idw_account:DW;			
			[Bindalbe]
			private var idw_StaffEC:DW2, idw_StaffEP:DW2, idw_StaffDL:DW2, idw_StaffGL:DW2, idw_RoleUser:DW2;
		
			[Bindable]
			public var ia_dept:ArrayList = new ArrayList(Fun2.deptDS(is_app, true));
			[Bindable]
			public var ia_titles:ArrayList = new ArrayList(Fun2.titlesDS(is_app, true));
			[Bindable]
			public var ia_role:ArrayList = new ArrayList(Fun2.roleDS(is_app, true));
			[Bindable]
			public var ia_gender:ArrayList = new ArrayList(Fun2.genderDS(is_app, true));
			[Bindable]
			public var ia_maritalStatus:ArrayList = new ArrayList(Fun2.maritalStatusDS(is_app, true));			
			[Bindable]
			public var ia_bloodType:ArrayList = new ArrayList(Fun2.bloodTypeDS(is_app, true));
			[Bindable]
			public var ia_dutyFlag:ArrayList = new ArrayList(Fun2.dutyFlagDS(is_app, true));
			[Bindable]
			public var ia_deleFlag:ArrayList = new ArrayList(Fun2.deleFlagDS(is_app, true));
			[Bindable]
			public var ia_degree:ArrayList = new ArrayList(Fun2.degreeDS(is_app, true));
			[Bindable]
			public var ia_studyStatus:ArrayList = new ArrayList(Fun2.studyStatusDS(is_app, true));
			[Bindable]
			public var ia_itemName:ArrayList = new ArrayList(Fun2.itemNameDS(is_app, 10, true));
			[Bindable]
			private var ia_ynFlag:ArrayList = new ArrayList(Fun2.ynFlagDS(is_app, true));
			
			private function init():void{
				//dw1: Staff
				edit_1.aoDW[0] = new DW();
				idw_master = edit_1.aoDW[0]; 
				idw_master.oConfig = {
					//updatable: false,
					autos: ["creator","createDate","reviser","reviseDate"],
					keys: ["sn"],
					mapping: true,
					items: [						
						{source:sn, 			dataType:"N",	inputType:"I"},
						{source:empNo,			dataType:"S"},
						{source:cName,			dataType:"S"},
						{source:eName,			dataType:"S"},
						{source:deptSn,			dataType:"N"},
						{source:titlesSn,		dataType:"N"},
						{source:gender,			dataType:"S"},
						{source:birthDate,		dataType:"D"},
						{source:idNo,			dataType:"S"},
						{source:conTel,			dataType:"S"},
						{source:address,		dataType:"S"},
						{source:eMail,			dataType:"S"},
						{source:takeOfficeDate,	dataType:"D"},
						{source:birthplace,		dataType:"S"},
						{source:maritalStatus,	dataType:"S"},
						{source:bloodType,		dataType:"S"},
						{source:stature,		dataType:"N"},
						{source:weight,			dataType:"N"},
						{source:urgentName,		dataType:"S"},
						{source:urgentTel,		dataType:"S"},
						{source:dutyFlag,		dataType:"N"},
						{source:fileName,		dataType:"S"},
						{source:deleFlag,		dataType:"N"},
						{source:creator,		dataType:"S",	inputType:"R"}, 
						{source:createDate,		dataType:"DT",	inputType:"R"}, 
						{source:reviser,		dataType:"S",	inputType:"R"}, 
						{source:reviseDate,		dataType:"DT",	inputType:"R"}
					]
				}; 			
				
				//dw2: Account
				edit_1.aoDW[1] = new DW();
				idw_account = edit_1.aoDW[1];
				edit_1.aoDW[1].oConfig = {
					autos: ["acreator","acreateDate","areviser","areviseDate"],					
					upDW: idw_master,					
					upQKeys: ["sn"],
					qKeys: ["userSn"],
					keys: ["asn"],
					items: [
						{source:asn, 		dataType:"N",	inputType:"I"},						
						{source:userType,	dataType:"N",	init:3},
						{source:userSn,		dataType:"N", 	inputType:"2"},
						//{source:roleSn,		dataType:"N"},						
						{source:loginId,	dataType:"S"},
						{source:loginPw,	dataType:"S"},						
						{source:adeleFlag,	dataType:"N"},
						{source:acreator,	dataType:"S",	inputType:"R"}, 
						{source:acreateDate,dataType:"DT",	inputType:"R"}, 
						{source:areviser,	dataType:"S",	inputType:"R"}, 
						{source:areviseDate,dataType:"DT",	inputType:"R"}
					]				
				};
				
				//dw3: StaffEC
				edit_1.aoDW[2] = new DW2();
				idw_StaffEC = edit_1.aoDW[2]; 
				idw_StaffEC.xTool = tb_StaffEC;
				idw_StaffEC.oConfig = {			
					upDW: idw_master,
					grid: grid_StaffEC,
					upQKeys: ["sn"],
					qKeys: ["staffSn"],
					keys: ["sn"],
					items: [
						{fid:"sn", 				dataType:"N", 	inputType:"I"},
						{fid:"staffSn", 		dataType:"N", 	inputType:"2"},
						{fid:"school",			dataType:"S"},
						{fid:"degree",			dataType:"S"},
						{fid:"department",		dataType:"S"},
						{fid:"sDate",			dataType:"D"},
						{fid:"eDate",			dataType:"D"},
						{fid:"studyStatus",		dataType:"S"}
					]				
				};
				
				//dw4: StaffEP
				edit_1.aoDW[3] = new DW2();
				idw_StaffEP = edit_1.aoDW[3]; 
				idw_StaffEP.xTool = tb_StaffEP;
				idw_StaffEP.oConfig = {			
					upDW: idw_master,
					grid: grid_StaffEP,
					upQKeys: ["sn"],
					qKeys: ["staffSn"],
					keys: ["sn"],
					items: [
						{fid:"sn", 				dataType:"N", 	inputType:"I"},
						{fid:"staffSn", 		dataType:"N", 	inputType:"2"},
						{fid:"company",			dataType:"S"},
						{fid:"titles",			dataType:"S"},
						{fid:"sDate",			dataType:"D"},
						{fid:"eDate",			dataType:"D"},
						{fid:"jobContent",		dataType:"S"}
					]				
				};
				
				//dw5: StaffDL
				edit_1.aoDW[4] = new DW2();
				idw_StaffDL = edit_1.aoDW[4]; 
				idw_StaffDL.xTool = tb_StaffDL;
				idw_StaffDL.oConfig = {			
					upDW: idw_master,
					grid: grid_StaffDL,
					upQKeys: ["sn"],
					qKeys: ["staffSn"],
					keys: ["sn"],
					items: [
						{fid:"sn", 				dataType:"N", 	inputType:"I"},
						{fid:"staffSn", 		dataType:"N", 	inputType:"2"},
						{fid:"funcItemSn",		dataType:"N"}
					]				
				};
				
				//dw5: StaffGL
				edit_1.aoDW[5] = new DW2();
				idw_StaffGL = edit_1.aoDW[5]; 
				idw_StaffGL.xTool = tb_StaffGL;
				idw_StaffGL.oConfig = {			
					upDW: idw_master,
					grid: grid_StaffGL,
					upQKeys: ["sn"],
					qKeys: ["staffSn"],
					keys: ["sn"],
					items: [
						{fid:"sn", 				dataType:"N", 	inputType:"I"},
						{fid:"staffSn", 		dataType:"N", 	inputType:"2"},
						{fid:"licenseName",		dataType:"S"},
						{fid:"fileName",		dataType:"S"}
					]				
				};
				
				//dw6: RoleUser
				edit_1.aoDW[6] = new DW2();
				idw_RoleUser = edit_1.aoDW[6]; 
				idw_RoleUser.xTool = tb_RoleUser;
				idw_RoleUser.oConfig = {			
					upDW: idw_master,
					grid: grid_RoleUser,
					upQKeys: ["sn"],
					qKeys: ["userSn"],
					keys: ["sn"],
					items: [
						{fid:"sn", 			dataType:"N", 	inputType:"I"},
						{fid:"userSn", 		dataType:"N", 	inputType:"2"},
						{fid:"roleSn", 		dataType:"N"},
						{fid:"userType", 	dataType:"N"},
						{fid:"roleName",	update:false,	required:true}
					]					
				};
			}
			private function whenSave(p_data:Object):Boolean{
				if (p_data.fun != "D"){					
					if (!Fun.checkEmail(Fun.getItem(eMail) as String)){
						Fun.msg("E", iR.message00);
						return false;
					}
					
					if (Fun.getItem(adeleFlag)== 0 && (grid_RoleUser.dataProvider as ArrayCollection).source.length==0){
						Fun.msg("E", "尚未設定讀取系統角色權限");
						return false;
					}
					
					//判斷是否已有相同登入帳號
					var t_data1:Object = {
						data: "AccountFlag",
						cuEvent: String(p_data.fun),
						sn: int(Fun.getItem(asn)),
						loginId: Fun.getItem(loginId)
					};
					
					var ia_data:Object = Fun.readRow(is_app, t_data1);
					if (int(ia_data.cs) > 0){
						Fun.msg("E", iR.message01);
						return false;
					}
					
					if (Fun.getItem(loginPw)!=Fun.getItem(loginPw2)){
						Fun.msg("E", iR.message02);
						focusManager.setFocus(loginPw2);					
						return false;
					}else{
						if (Fun.getItem(loginPw)!=Fun.getItem(loginPw3)){
							var t_md5:MD5 = new MD5();
							var ts_code:String = t_md5.encrypt(String(Fun.getItem(loginPw)));
							t_md5 = null;					
							
							idw_account.setItem(loginPw, ts_code, true);
						}							
					}
					
					//如果 staff 刪除了, 帳號也跟著刪除
					if (Fun.getItem(deleFlag)==1){
						idw_account.setItem(adeleFlag, 1, true);					
					}
				}				
				return true;
			}
			
			private function afterOpen(p_data:Object):void{
				tmpFileName.text = "";				
				switch (p_data.fun){
					case "C":
						Fun.setItem(loginPw, '');
						Fun.setItem(loginPw2, '');
						Fun.setItem(loginPw3, '');
						loginPw2Form.visible = true;
						uploadFiles.visible = true;
						imageName.source = Fun.sDirRoot + Fun2.fTeachers + "images.jpg";
						break;					
					case "U":
					case "V":
						var fileNames:String = StringUtil.trim(Fun.getItem(fileName) as String);
						
						if (fileNames==""){
							fileNames="images.jpg";						
						}
						imageName.source = Fun.sDirRoot + Fun2.fTeachers + fileNames;

						break;
				}
				
				//相關隱藏顯示設定
				switch (p_data.fun){
					case "U":
						Fun.setItem(loginPw2, Fun.getItem(loginPw));
						Fun.setItem(loginPw3, Fun.getItem(loginPw));
						loginPw2Form.visible = true;
						uploadFiles.visible = true;
						break;
					case "V":
						loginPw2Form.visible = false;
						uploadFiles.visible = false;					
						break;
				}
			}
			
			private var i_file:FileReference;
			private function fnUpload():void {
				i_file = new FileReference();
				i_file.addEventListener(Event.SELECT, getFile);
				i_file.addEventListener(Event.COMPLETE, onComplete);				
				i_file.browse();
			}			
			
			private function getFile(p_event:Event):void {
				
				var fileTypeTmp:String = String(p_event.target.type).toLowerCase();				
				switch (fileTypeTmp){
					case ".jpg":
					case ".gif":
					case ".jpeg":
					case ".png":
						var fileNameTmp:String = StringUtil.trim('Staff_' + String(i_session.schoolDSn) + '_' + String(i_session.usersSn) + '_' + String(new Date().getTime()) + fileTypeTmp);
						
						var t_file:Object = {};
						t_file[Fun.csFile] = i_file;
						t_file[Fun.csFilePath] = Fun2.fTeachers + fileNameTmp;
						FL.upload(this, is_app, [t_file]);
												
						Fun.setItem(tmpFileName, p_event.target.name);
						idw_master.setItem(fileName, fileNameTmp, true);
						
						is_file = Fun.sDirRoot + Fun2.fTeachers + fileNameTmp;
						
						break;					
					default:					
						Fun.msg("E", iR.message06);
						break;
				}
				
			}
			
			private var is_file:String;
			private function onComplete(p_event:Event):void {				
				var loader:Loader = new Loader();				
				var request:URLRequest=new URLRequest(is_file);				
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE,function():void {
					imageName.source = loader.content;
					loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, arguments.callee);
				});
				loader.load(request);
			}
			
			//上傳檔案			
			private var j_file:FileReference;
			public function multiUpload(pn_sn:int):void {
				j_file = new FileReference();
				j_file.addEventListener(Event.SELECT, getMultiFile);
				j_file.browse();		
			}
			private function getMultiFile(p_event:Event):void {				
				var multiTypeTmp:String = String(p_event.target.type).toLowerCase();				
				switch (multiTypeTmp){
					case ".pdf":
					case ".xls":
					case ".xlsx":
					case ".doc":
					case ".docx":
					case ".ppt":
					case ".jpg":
					case ".gif":
					case ".jpeg":
					case ".png":
						var multiNameTmp:String = StringUtil.trim('Staff_' + String(i_session.schoolDSn) + '_' + String(i_session.usersSn) + '_' + String(new Date().getTime()) + multiTypeTmp);
						
						var m_file:Object = {};
						m_file[Fun.csFile] = j_file;
						m_file[Fun.csFilePath] = Fun2.fTeachers + multiNameTmp;
						FL.upload(this, is_app, [m_file]);
						
						//取給檔名						
						var tn_row:int = grid_StaffGL.selectedIndex;
						
						idw_StaffGL.setItemByFid("fileName", multiNameTmp, true, tn_row);
						Fun.refreshGrid(grid_StaffGL, tn_row);
						
						Fun.msg("I", iR.message07);
						
						break;					
					default:					
						Fun.msg("E", iR.message08);
						break;
				}
			}
			
			public function openFiles(pn_fileName:String):void{
				if (pn_fileName!=""){
					Fun.openFile(Fun.sDirRoot + Fun2.fTeachers + pn_fileName);
				}else{
					Fun.msg("E", iR.message09);
				}				
			}
			
			//角色
			public function fnClickRole(pn_sn:int):void{
				var t_win:FindRole = new FindRole();
				Fun.openPopup(t_win, this);				
				
				t_win.qry_1.fSelectRow = fSelectRowRole;				
				t_win.qry_1.bCloseAfterQuery = false;
				t_win.fAfterOk = fSelectRowRole;
			}			
			private function fSelectRowRole(p_row:Object):void{
				var tn_row:int = grid_RoleUser.selectedIndex;
				
				var t_row:Object = grid_RoleUser.selectedItem;
				
				t_row.roleName = p_row.roleName;
				
				idw_RoleUser.setItemByFid("roleSn", p_row.sn, true, tn_row);
				idw_RoleUser.setItemByFid("userType", 3, true, tn_row);
				
				Fun.refreshGrid(grid_RoleUser, tn_row);
			}
		]]>
	</fx:Script>
	<x2:comEdit x="10" y="465" id="edit_1" fWhenSave="whenSave" fAfterOpen="afterOpen">
	</x2:comEdit>	
	<mx:TabNavigator x="10" y="10" width="862" height="450">		
		<mx:Canvas label="{iR.Canvas01}">
			<x2:Num1 id="sn" visible="false"/>
			<s:TextInput id="creator" visible="false"/>
			<s:TextInput id="createDate" visible="false"/>
			<s:TextInput id="reviser" visible="false"/>
			<s:TextInput id="reviseDate" visible="false"/>
			<mx:Form x="10" y="10" horizontalScrollPolicy="off">
				<mx:FormItem label="{iR.empNo} :" required="true">
					<s:TextInput id="empNo"/>
				</mx:FormItem>
				<mx:FormItem label="{iR.cName} :" required="true">
					<s:TextInput id="cName"/>										
				</mx:FormItem>
				<mx:FormItem label="{iR.eName} :">
					<s:TextInput id="eName"/>
				</mx:FormItem>
				<mx:FormItem label="{iR.gender} :" required="true">
					<x2:DDL1 id="gender" dataProvider="{ia_gender}"></x2:DDL1>
				</mx:FormItem>
				<mx:FormItem label="{iR.deptSn} :" required="true">
					<x2:DDL1 id="deptSn" dataProvider="{ia_dept}"></x2:DDL1>					
				</mx:FormItem>
				<mx:FormItem label="{iR.titlesSn} :" required="true">
					<x2:DDL1 id="titlesSn" dataProvider="{ia_titles}"></x2:DDL1>
				</mx:FormItem>
				<mx:FormItem label="{iR.birthDate} :" required="true">
					<mx:DateField formatString="YYYY/MM/DD" id="birthDate" yearNavigationEnabled="true"/>
				</mx:FormItem>
				<mx:FormItem label="{iR.idNo} :">
					<s:TextInput id="idNo"/>
				</mx:FormItem>
				<mx:FormItem label="{iR.conTel} :" required="true">
					<s:TextInput id="conTel"/>
				</mx:FormItem>
				<mx:FormItem label="{iR.address} :" required="true">
					<s:TextInput width="338" id="address"/>
				</mx:FormItem>
				<mx:FormItem label="{iR.eMail} :" required="true">
					<s:TextInput width="338" id="eMail"/>
				</mx:FormItem>
			</mx:Form>
			<mx:Form x="430" y="10">
				<mx:Image id="imageName" width="148" height="123" autoLoad="true" scaleContent="true" smoothBitmapContent="true"/>				
				<mx:FormItem label="{iR.tmpFileName} :" width="100%" id="uploadFiles">
					<mx:HBox width="100%">
						<s:TextInput id="tmpFileName" editable="false" enabled="false" width="121"/>										
						<mx:Button label="{iR.fileName}" click="fnUpload()"/>
						<s:TextInput id="fileName" visible="false" width="0"/>
					</mx:HBox>					
				</mx:FormItem>
				<mx:FormItem label="{iR.takeOfficeDate} :" required="true">
					<mx:DateField formatString="YYYY/MM/DD" id="takeOfficeDate" yearNavigationEnabled="true"/>
				</mx:FormItem>
				<mx:FormItem label="{iR.dutyFlag} :" required="true">
					<x2:DDL1 id="dutyFlag" dataProvider="{ia_dutyFlag}"></x2:DDL1>
				</mx:FormItem>
				<mx:FormItem label="{iR.deleFlag} :">
					<x2:DDL1 id="deleFlag" dataProvider="{ia_ynFlag}"></x2:DDL1>			
				</mx:FormItem>
			</mx:Form>
		</mx:Canvas>
		<mx:Canvas label="{iR.Canvas02}">
			<mx:Form x="10" y="10">
				<mx:FormItem label="{iR.birthplace} :">
					<s:TextInput id="birthplace"/>
				</mx:FormItem>
				<mx:FormItem label="{iR.maritalStatus} :" required="true">
					<x2:DDL1 id="maritalStatus" dataProvider="{ia_maritalStatus}"></x2:DDL1>										
				</mx:FormItem>
				<mx:FormItem label="{iR.bloodType} :" required="true">
					<x2:DDL1 id="bloodType" dataProvider="{ia_bloodType}"></x2:DDL1>					
				</mx:FormItem>
				<mx:FormItem label="{iR.stature} :">
					<mx:NumericStepper minimum="100" maximum="210" id="stature" value="0"/>
				</mx:FormItem>
				<mx:FormItem label="{iR.weight} :">
					<mx:NumericStepper minimum="30" maximum="120" id="weight" value="0"/>					
				</mx:FormItem>
				<mx:FormItem label="{iR.urgentName} :" required="true">
					<s:TextInput id="urgentName"/>
				</mx:FormItem>
				<mx:FormItem label="{iR.urgentTel} :" required="true">
					<s:TextInput id="urgentTel"/>
				</mx:FormItem>
			</mx:Form>
		</mx:Canvas>
		<mx:Canvas label="{iR.Canvas03}">
			<mx:Form x="10" y="29">
				<x2:DG2
						 
						 
						 alpha="0.7"		
						 		 
						 
						 
						 id="grid_StaffEC" height="340" width="800">
					<x2:columns><s:ArrayList>
						<s:GridColumn dataField="sn" visible="false"/>
						<s:GridColumn dataField="staffSn" visible="false"/>						
						<s:GridColumn headerText="{iR.school}" dataField="school" width="190">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:Text2/>																																			
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
						<s:GridColumn headerText="{iR.degree}" dataField="degree" width="70">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:DDL2 dataProvider="{outerDocument.ia_degree}"/>
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
						<s:GridColumn headerText="{iR.department}" dataField="department" width="190">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:Text2/>																																			
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
						<s:GridColumn headerText="{iR.sDate02}" dataField="sDate" width="120">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:Date2 id="sDate"/>																																			
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
						<s:GridColumn headerText="{iR.eDate02}" dataField="eDate" width="120">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:Date2 id="eDate"/>																																			
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
						<s:GridColumn headerText="{iR.studyStatus}" dataField="studyStatus" width="70">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:DDL2 dataProvider="{outerDocument.ia_studyStatus}"/>
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
					</s:ArrayList></x2:columns>
				</x2:DG2>
			</mx:Form>
			<x2:TBar2 x="567" y="4" id="tb_StaffEC">
			</x2:TBar2>
		</mx:Canvas>
		<mx:Canvas label="{iR.Canvas04}">
			<mx:Form x="10" y="29">
				<x2:DG2
						 
						 
						 alpha="0.7"		
						 		 
						 
						 
						 id="grid_StaffEP" height="340" width="800">
					<x2:columns><s:ArrayList>
						<s:GridColumn dataField="sn" visible="false"/>
						<s:GridColumn dataField="staffSn" visible="false"/>						
						<s:GridColumn headerText="{iR.company}" dataField="company" width="190">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:Text2/>																																			
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
						<s:GridColumn headerText="{iR.titles}" dataField="titles" width="190">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:Text2/>																																			
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>		         
						</s:GridColumn>
						<s:GridColumn headerText="{iR.sDate03}" dataField="sDate" width="120">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:Date2 id="sDate"/>																																			
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
						<s:GridColumn headerText="{iR.eDate03}" dataField="eDate" width="120">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:Date2 id="eDate"/>																																			
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
						<s:GridColumn headerText="{iR.jobContent}" dataField="jobContent">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:Text2/>																																			
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
					</s:ArrayList></x2:columns>
				</x2:DG2>
			</mx:Form>
			<x2:TBar2 x="567" y="4" id="tb_StaffEP">
			</x2:TBar2>
		</mx:Canvas>
		<mx:Canvas label="{iR.Canvas05}">
			<mx:Form x="10" y="29">
				<x2:DG2
						 
						 
						 alpha="0.7"		
						 		 
						 
						 
						 id="grid_StaffDL" height="340" width="300">
					<x2:columns><s:ArrayList>
						<s:GridColumn dataField="sn" visible="false"/>
						<s:GridColumn dataField="staffSn" visible="false"/>
						<s:GridColumn headerText="{iR.funcItemSn}" dataField="funcItemSn">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:DDL2 dataProvider="{outerDocument.ia_itemName}"/>
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
					</s:ArrayList></x2:columns>
				</x2:DG2>
			</mx:Form>
			<x2:TBar2 x="67" y="4" id="tb_StaffDL">
			</x2:TBar2>
			<mx:Form x="357" y="29">
				<x2:DG2
						 
						 
						 alpha="0.7"		
						 		 
						 
						 
						 id="grid_StaffGL" height="340" width="460">
					<x2:columns><s:ArrayList>
						<s:GridColumn dataField="sn" visible="false"/>
						<s:GridColumn dataField="staffSn" visible="false"/>
						<s:GridColumn dataField="fileName" visible="false"/>
						<s:GridColumn headerText="{iR.theFiles}" width="100">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<mx:Button label="Open" icon="@Embed(source='x2/image/star.gif')" click="outerDocument.openFiles(data.fileName)" buttonMode="true" toolTip="Open"/>
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
						<s:GridColumn headerText="{iR.licenseName}" dataField="licenseName">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:Text2/>
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
						<s:GridColumn headerText="{iR.upload}" width="40">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:btnPick click="outerDocument.multiUpload(data.sn)"/>									
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
					</s:ArrayList></x2:columns>
				</x2:DG2>
			</mx:Form>
			<x2:TBar2 x="574" y="4" id="tb_StaffGL">
			</x2:TBar2>
		</mx:Canvas>
		<mx:Canvas label="{iR.Canvas06}">
			<x2:Num1 id="asn" visible="false"/>
			<x2:Num1 id="userType" visible="false"/>
			<x2:Num1 id="userSn" visible="false"/>
			<s:TextInput id="loginPw3" visible="false"/>
			<s:TextInput id="acreator" visible="false"/>
			<s:TextInput id="acreateDate" visible="false"/>
			<s:TextInput id="areviser" visible="false"/>
			<s:TextInput id="areviseDate" visible="false"/>
			<s:Form x="10" y="10" width="400">
				<s:layout> 
					<s:FormLayout gap="-5"/>			
				</s:layout>	
				<s:FormItem label="{iR.adeleFlag} :" required="true">
					<x2:DDL1 id="adeleFlag" dataProvider="{ia_deleFlag}"></x2:DDL1>
				</s:FormItem>
				<s:FormItem label="{iR.loginId} :" required="true">
					<s:TextInput id="loginId" width="100%"/>
				</s:FormItem>
				<s:FormItem label="{iR.loginPw} :" required="true">
					<s:TextInput id="loginPw" maxChars="20" displayAsPassword="true" width="100%"/>
				</s:FormItem>				
				<s:FormItem label="{iR.loginPw2} :" required="true" id="loginPw2Form">
					<s:TextInput id="loginPw2" maxChars="20" displayAsPassword="true" width="100%"/>
				</s:FormItem>
				<!--
				<mx:FormItem label="{iR.roleSn} :" required="true">
					<x2:DDL1 id="roleSn" dataProvider="{ia_role}"></x2:DDL1>
				</mx:FormItem>
				-->
			</s:Form>
			
			<x2:TBar2 x="572" y="10" id="tb_RoleUser">
			</x2:TBar2>
			<mx:Form x="447" y="35" width="400">
				<x2:DG2 width="100%" alpha="0.7" height="324" x="10" y="144" id="grid_RoleUser">
					<x2:columns><s:ArrayList>
						<s:GridColumn dataField="sn" visible="false"/>
						<s:GridColumn dataField="roleSn" visible="false"/>
						<s:GridColumn dataField="userType" visible="false"/>
						<s:GridColumn dataField="userSn" visible="false"/>
						<s:GridColumn headerText="{iR.roleName}" dataField="roleName"/>						
						<s:GridColumn width="40">
							<s:itemRenderer>
								<fx:Component><s:GridItemRenderer>
									<x2:btnPick click="outerDocument.fnClickRole(data.sn)"/>									
								</s:GridItemRenderer></fx:Component>
							</s:itemRenderer>        		         
						</s:GridColumn>
					</s:ArrayList></x2:columns>
				</x2:DG2>
			</mx:Form>
		</mx:Canvas>
	</mx:TabNavigator>	
</s:TitleWindow>
