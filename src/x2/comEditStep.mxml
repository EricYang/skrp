<?xml version="1.0" encoding="utf-8"?>
<s:HGroup 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:x2="x2.*" 
	verticalAlign="middle" gap="2" paddingLeft="2"	
	width="224" height="32"	
 	horizontalAlign="right"	
	>
	
	<s:Button id="btnPre" height="26" label="上一步" icon="@Embed('x2/image/toLeft.png')" click="movePage(-1)"/>
	<s:Button id="btnNext" height="26" label="下一步" icon="x2/image/toRight.png" click="movePage(1)"/>
	<!--
	<x2:comEdit id="edit_1" visible="false" includeInLayout="false" width="0"/>
	-->
	
	<fx:Script>
		<![CDATA[
		//initialize="initial()"
		//import mx.controls.Button;
		import mx.containers.TabNavigator;
		
		import spark.components.Button;
		
		import x2.*;

			
		public var xEdit:comEdit;
		public var xTab:TabNavigator;
			
		/*
		//icon		
		[Embed(source='image/toLeft.png')]
		private var i_left:Class;
		//[Embed(source='image/toLeft0.png')]
		//private var i_left0:Class;
		    
		[Embed(source='image/toRight.png')]
		private var i_right:Class;
		//[Embed(source='image/toRight0.png')]
		//private var i_right0:Class;
		*/
			

		/**
		 * 使用者執行 "下一步" 之前執行的函數.(para int:old page/return boolean)
		 */ 
		public var fWhenMovePage:Function;


		private var ia_dw:Array;
		private var in_pages:int;	//page account
		//private var i_prev:Button;// = cmd_save;	
		//private var i_next:Button;// = cmdExit;	
		
		//for localization
		//private var in_page:int;	//current active page	
		//private var ic_save:String;	
		//private var ic_next:String;	
		//private var ic_sureExit:String;	
		//private var ic_reSave:String;	
		//private var ic_complete:String;	
		
		/*
		//adjust object
		private function initial():void{
			cmdSave2.visible = false;			
			cmdSave.setStyle("icon", i_left);
			cmdSave.setStyle("disabledIcon", i_left0);			
			cmdExit.setStyle("icon", i_right);
			cmdExit.setStyle("disabledIcon", i_right0);
			
			txt_msg.visible = false;
			if (this.width < 165) {
				this.width = 165;
			}
		}
		*/
		
		
		public function init():void{
			//check first 
			if (xTab == null){
				Fun.msg("E","xTab can not be null !");
				//return false;
				return;
			}
			
			//set instance variables and ststus
			in_pages = xTab.numChildren;
			ia_dw = xEdit.aoDW;
			
			for (var i:int=0;i<in_pages;i++){
				(xTab.getChildAt(i) as Object).enabled = false;
			}
			
			viewPage(0);
			//i_prev = cmdSave;	
			//i_next = cmdExit;	
			//i_prev.enabled = false;
			//i_next.enabled = false;
						
			//init, async call !!
			//super.init(p_data, afterInit);
			//super.init(p_data);
			
		}
		
		private var in_oldPage:int = 0;
		private function zz_afterInit(p_data:Object):void{
						
			//set title for titleWindow
			//if (ib_titleWin){
			//	i_parent.title = ((sTitle != "") ? sTitle : p_data.title) + "--["+is_funName+"]";
			//}
			
			//add event listener for parent window close event
 			//if (ib_titleWin){
			//	i_parent.addEventListener(Event.CLOSE, closeClick);
			//}
			
			/*
			//set object
			//cmdSave2.visible = false;		//here!!
			cmdSave.setStyle("icon", i_left);
			//cmdSave.setStyle("disabledIcon", i_left0);			
			cmdExit.setStyle("icon", i_right);
			//cmdExit.setStyle("disabledIcon", i_right0);
			
			menu.visible = false;
			txt_msg.visible = false;
			if (this.width < 165) {
				this.width = 165;
			}

			
			
			//case of view record
			if (is_fun == "V"){
				setPages(true);
				//return true;				
				return;
			}				
			
			setPages(false);
			viewPage(0);			
			i_next.enabled = true;
			*/
			
		}
						
		
		private function movePage(pn_way:int):void{
			//var tn_oldPage:int = in_oldPagexTab.selectedIndex;
			var tn_newPage:int = in_oldPage + pn_way;
			//if last page, save data !
			if (pn_way == 1){				
				//check fields
				//var tn_page:int = xTab.selectedIndex;
				//var ta_dw:Array = xEdit.aoDW;
				for (var i:int=0; i<ia_dw.length; i++){
					var ts_error:String = (ia_dw[i] as DW).checkRows(true, in_oldPage);
					if (ts_error != ""){
						Fun.msg("E", ts_error);
						return;
					}
				}
				
				//if last page, save data !
				if (tn_newPage == in_pages){
					//OkClick();
					xEdit.saveData({bCheck:false});
					return;
				}
				
				
				//gfWhenMovePage
				if (fWhenMovePage != null){
					if (!fWhenMovePage(in_oldPage)){
						return;
					}
				}
				
			}else{	//pre
				//do nothing
			}
			
			viewPage(tn_newPage);
			
			/*
			//set next button label if need
			if (xTab.selectedIndex < in_pages - 1){
				btnNext.label = Fun.R.next;
				btnNext.toolTip = Fun.R.tipNext;			
			}else{
				btnNext.label = Fun.R.complete;
				btnNext.toolTip = Fun.R.tipSave;							
			}
			
			//var tn_page:int = xTab.selectedIndex;
			(xTab.getChildAt(tn_oldPage) as Object).enabled = false;				
			(xTab.getChildAt(tn_newPage) as Object).enabled = true;				
			
			//in_page = pn_page;
			//var t_page:Object = oTab.getChildAt(pn_page); 
			//t_page.enabled = true;
			
			//set button status
			btnPre.enabled = (tn_newPage > 0);
			xTab.selectedIndex = tn_newPage;
			*/
		}
			
		
		//set all pages status 
		private function setPages(pb_status:Boolean):void{
			for (var i:int=0;i<in_pages;i++){
				(xTab.getChildAt(i) as Object).enabled = pb_status;
			}
		}


		//enable one page to true 
		private function viewPage(pn_page:int):void{
			if (in_oldPage != pn_page){
				(xTab.getChildAt(in_oldPage) as Object).enabled = false;
			}
			
			xTab.selectedIndex = pn_page;
			//(xTab.getChildAt(tn_page) as Object).enabled = false;				
			(xTab.getChildAt(pn_page) as Object).enabled = true;				
			
			//in_page = pn_page;
			//var t_page:Object = oTab.getChildAt(pn_page); 
			//t_page.enabled = true;
			
			//set button status
			btnPre.enabled = (pn_page > 0);
			//xTab.selectedIndex = pn_page;
			
			//set next button label if need
			if (pn_page < in_pages - 1){
				btnNext.label = Fun.R.next;
				btnNext.toolTip = Fun.R.tipNext;			
			}else{
				btnNext.label = Fun.R.complete;
				btnNext.toolTip = Fun.R.tipSave;							
			}
			
			//set instance
			in_oldPage = pn_page;
			
			//setCmdNext();
			//oTab.selectedIndex = pn_page;
			//var tn_last:int = in_pages - 1;
			//i_next.label = (pn_page == tn_last) ? ic_complete : ic_next;
		}
			

/*
		private function movePage(pn_way:int):void{
			var tn_page:int = xTab.selectedIndex + pn_way;
			if (tn_page >= 0 && tn_page < in_pages){
				viewPage(tn_page);				
			}						
		}
	*/				
		]]>
	</fx:Script>
</s:HGroup>
