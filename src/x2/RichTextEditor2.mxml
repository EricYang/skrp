<?xml version="1.0" encoding="utf-8"?>
<mx:RichTextEditor 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	width="508" height="358"	
	creationComplete="init()">
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.containers.ControlBar;
			import mx.controls.Button;
			
			
			private function init():void{
				//adds the "Add Image" button to the toolbar.
				var t_btn:Button = new Button;
				t_btn.label = "Add Image";
				t_btn.addEventListener(MouseEvent.CLICK, insertImage);
				this.toolbar.addChild(t_btn);
			}
			
			
			public function calculateHtmlPosition(htmlstr:String, pos:int):int {
				//calculateHtmlPosition() is courtesy of Andrei Ionescu.
				//see http://www.flexer.info/2008/03/26/find-cursor-position-in-a-htmltext-o bject-richtexteditor-textarea-textfield-update/
				//
				// we return -1 (not found) if the position is bad
				if (pos <= -1)
					return -1;
				
				
				
				// characters that appears when a tag starts
				var openTags:Array = ["<", "&"];
				// characters that appears when a tag ends
				var closeTags:Array = [">", ";"];
				// the tag should be replaced with
				// ex: &amp; is & and has 1 as length but normal 
				// tags have 0 length
				var tagReplaceLength:Array = [0, 1];
				// flag to know when we are inside a tag
				var isInsideTag:Boolean = false;
				var cnt:int = 0;
				// the id of the tag opening found
				var tagId:int = -1;
				var tagContent:String = "";
				
				
				
				for (var i:int = 0; i < htmlstr.length; i++) {
					// if the counter passes the position specified
					// means that we reach the text position
					if (cnt >= pos)
						break;
					// current char 
					var currentChar:String = htmlstr.charAt(i);
					// checking if the current char is in the open tag array
					for (var j:int = 0; j < openTags.length; j++) {
						if (currentChar == openTags[j]) {
							// set flag
							isInsideTag = true;
							// store the tag open id
							tagId = j;
						}
					}
					if (!isInsideTag) {
						// increment the counter
						cnt++;
					} else {
						// store the tag content
						// needed afterwards to find new lines
						tagContent += currentChar;
					}
					if (currentChar == closeTags[tagId]) {
						// we add the replace length 
						if (tagId > -1)
							cnt += tagReplaceLength[tagId];
						// if we encounter the </P> tag we increment the counter
						// because of new line character
						if (tagContent == "</P>")
							cnt++;
						// set flag 
						isInsideTag = false;
						// reset tag content
						tagContent = "";
					}
				}
				// return the position in html text
				return i;
			}
			
			
			
			private function insertImage(event:MouseEvent):void {
				//the new image tag to be inserted:
				var theImageTag:String = "<img src='note.gif' width='16' height='16' hspace='0' vspace='0'>";
				var htmlPos:int;
				var origTextFirstPart:String;
				var origTextSecondPart:String;
				
				
				
				if (this.selection.beginIndex != 0) {
					//Find the text position within htmlText:
					htmlPos = calculateHtmlPosition(this.htmlText, this.selection.beginIndex);
				} else {
					//We are at the first char position; just use zero as value:
					htmlPos = 0;
				}
				//Split the string up:
				origTextFirstPart = this.htmlText.substring(0, htmlPos);
				origTextSecondPart = this.htmlText.substr(htmlPos, this.htmlText.length - 1);
				
				
				
				//Insert the new image tag between first & second string sections:
				var newText:String = origTextFirstPart + theImageTag + origTextSecondPart;
				this.htmlText = newText;
			}
						
		]]>
	</fx:Script>
</mx:RichTextEditor>
