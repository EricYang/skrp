<?xml version="1.0" encoding="utf-8"?>
<s:Application 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark"  
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:x2="x2.*" 
	 
	
	 
	width="100%" height="100%" 
 	creationComplete="init()"
	preinitialize="{iR=Fun.getLang('MedicineTicket')}"
 	>
	<fx:Script>
		<![CDATA[		
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.formatters.DateFormatter;
			
			import x2.*;
			
			[Bindable]
			private var iR:Object;
			private var is_app:String = Fun.sApp;
			[Bindable]
			private var i_session:Object = Fun.readJson(is_app, {type:"getSession", sessionName:["usersSn", "userType"]});			
			[Bindable]			
			private var ia_classInfoName:ArrayList = new ArrayList(Fun2.classInfoNameDS(is_app, false));

			private function init():void {
				//list_1.bAutoRead = true;
				//list_1.nAppRange = 1; //0 不分  1 個人	2 部門
				//list_1.asFOwner = ["creator"];
				
				list_1.wQuery = new MedicineTicketQ();
				list_1.wEdit = new MedicineTicketE();			
				list_1.gList = grid_1;
				list_1.init();
				
				var t_data:Object ={
					data: "listMedicineTicket",
					csDataTemp: Fun2.gbClassLeaves
				};
				
				//list_1.setAC(new ArrayCollection(Fun.readRows(is_app, t_data)));
				//Fun.refreshGrid(grid_1);
				grid_1.dataProvider = new ArrayCollection(Fun.readRows(is_app, t_data));				
				//(list_1.wEdit as MedicineTicketE).fAfterClose = afterCloseEdit;
			}
			
			private function classInfoName(p_row:Object, p_column:GridColumn):String {
				return AR.getListLabel(ia_classInfoName, p_row[p_column.dataField]);
			}
			
			private function afterCloseEdit(p_data:Object):void {
				Fun.msg("I", "tt");
			}
			
			private function catchFun(p_data:Object):Boolean {
				//return false;				
				
				var t_row:Object = grid_1.selectedItem;
				switch (p_data.fun){
					case "U":
					case "D":
					case "V":						
						if (t_row){
							if (Fun.sLoginId != t_row.creator){
								switch (p_data.fun){
									case "U":
										list_1.btnClick("V");
										return true;
										break;
									case "D":
										Fun.msg("E", "無權限刪除");
										return true;
										break;
								}					
							}
							
							//已閱讀標示				
							switch (p_data.fun){
								case "U":
								case "V":
									if (t_row.readTimeS=="" && t_row.userType!=i_session.userType){
										var dateFormatter:DateFormatter = new DateFormatter();
										dateFormatter.formatString = "YYYY-MM-DD JJ:NN:SS";
										
										var t_data:Object = {							
											tableName: "MedicineTicket",
											columnName: "readTimeS",
											theValue: dateFormatter.format(new Date()),
											type: "type1", columnKeyName: "sn",
											keyValue: int(t_row.sn)												
										};							
										var tn_row:int = Fun.updateDB(is_app, t_data);							
										if (tn_row > 0){
											//更新該筆狀態
											t_row.readTimeS = t_data.theValue;
											Fun.refreshGrid(grid_1, grid_1.selectedIndex);
										}							
									}				
									break;
								case "D":
									if (t_row.userType!=i_session.userType){							
										Fun.msg("E", iR.message02);							
										return true;
									}
									
									if (t_row.readTimeP!=""){							
										Fun.msg("E", iR.message03);							
										return true;
									}
									break;
							}
						}
						break;
				}
				
				return false;
			}			
		]]>
	</fx:Script>
	<x2:sysBG/>
	<x2:subFunHead/>
	
	<x2:comList x="81" y="59" id="list_1" fCatchFun="catchFun">
	</x2:comList>
	<s:DataGrid id="grid_1" x="55" y="87" width="92%" height="80%" alpha="0.7">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="sn" visible="false"/>
				<s:GridColumn dataField="userType" visible="false"/>
				<s:GridColumn dataField="userSn" visible="false"/>
				<s:GridColumn headerText="{iR.selfFlag}" dataField="selfFlag" width="90">
					<s:itemRenderer><fx:Component><x2:irCenterVH>								 											 
						<s:Label text="{data.selfFlag}" color="#0000FF"/>
					</x2:irCenterVH></fx:Component></s:itemRenderer>											
				</s:GridColumn>
				<s:GridColumn headerText="{iR.readTimeP}" dataField="readTimeP" width="115"/>
				<s:GridColumn headerText="{iR.readTimeS}" dataField="readTimeS" width="115"/>
				<s:GridColumn headerText="{iR.acaName}" dataField="acaName" width="80"/>
				<s:GridColumn headerText="{iR.classLeavesSn}" dataField="classLeavesSn" width="100" labelFunction="classInfoName"/>			
				<s:GridColumn headerText="{iR.studentName}" dataField="studentName" width="100"/>		
				<s:GridColumn headerText="{iR.cDate}" dataField="cDate" width="80"/>
				<s:GridColumn headerText="{iR.eventRec}" dataField="eventRec"/>
				<s:GridColumn headerText="{iR.creator}" dataField="creator" width="80"/>
				<s:GridColumn headerText="{iR.createDate}" dataField="createDate" width="130"/>
				<s:GridColumn headerText="{iR.reviser}" dataField="reviser" width="80"/>
				<s:GridColumn headerText="{iR.reviseDate}" dataField="reviseDate" width="130"/>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
</s:Application>
