<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark"  
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:x2="x2.*"
	width="900" height="600" 	 
  	creationComplete="init()"  	 
	preinitialize="{iR=Fun.getLang('AccMonthIncome')}"
	>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			
			import x2.*;			
			[Bindable]
			private var iR:Object;	
			[Bindable]
			private var idw_master:DW;
			[Bindalbe]
			private var idw_AccMIncome:DW2;
			[Bindable]
			private var is_app:String = Fun.sApp;
			[Bindable]
			public var ia_ynFlag:ArrayList = new ArrayList(Fun2.ynFlagDS(is_app, true));
			
			private function init():void{	
				//dw1: AccMIncomeStu
				edit_1.aoDW[0] = new DW();
				idw_master = edit_1.aoDW[0]; 
				idw_master.oConfig = {	
					autos: ["creator","createDate","reviser","reviseDate"],
					keys: ["sn"],
					mapping: true,
					items: [
						{source:sn,					dataType:"N",	inputType:"I"},
						{source:serialNo,			dataType:"S"},
						{source:classLeavesSn,		dataType:"N"},
						{source:studentSn,			dataType:"N"},
						{source:studentName,		update:false,	inputType:"R",	required:true},						
						{source:cYear,				dataType:"N",	required:true,	fname:iR.Emessage01},
						{source:cMonth,				dataType:"N",	required:true,	fname:iR.Emessage02},
						{source:cYearMonth,			update:false,	inputType:"R"},
						{source:paidFlag,			dataType:"N",	inputType:"R"},
						{source:creator,			dataType:"S",	inputType:"R"}, 
						{source:createDate,			dataType:"DT",	inputType:"R"}, 
						{source:reviser,			dataType:"S",	inputType:"R"}, 
						{source:reviseDate,			dataType:"DT",	inputType:"R"}
					]				
				}; 			
				
				//dw1: AccMIncome
				edit_1.aoDW[1] = new DW2();				
				idw_AccMIncome = edit_1.aoDW[1]; 
				idw_AccMIncome.xTool = tb_AccMIncome;
				idw_AccMIncome.oConfig = {				
					autos: ["creator","createDate","reviser","reviseDate"],
					upDW: idw_master,
					grid: grid_AccMIncome,
					upQKeys: ["sn"],
					qKeys: ["accMIncomeStuSn"],
					keys: ["sn"],
					items: [
						{fid:"sn", 				dataType:"N", 	inputType:"I"},
						{fid:"accMIncomeStuSn", dataType:"N", 	inputType:"2"},
						{fid:"accIocSn", 		dataType:"N"},
						{fid:"accIocCode",		update:false,	required:true},
						{fid:"accIocName",		update:false,	required:true},
						{fid:"amounts",			dataType:"N",	required:true},
						{fid:"creator",			dataType:"S",	inputType:"R"}, 
						{fid:"createDate",		dataType:"DT",	inputType:"R"}, 
						{fid:"reviser",			dataType:"S",	inputType:"R"}, 
						{fid:"reviseDate",		dataType:"DT",	inputType:"R"}
					]				
				};
				idw_AccMIncome.fAfterFun = sumOfMo;
				
			}
			private function serialNoLabelFunc(p_row:Object, p_column:GridColumn):String {
				var index:int = p_column.grid.dataProvider.getItemIndex(p_row);
				if (index > -1) {
					return (index + 1).toString();
				}
				return "";
			}
			private function doFindStu():void{
				Fun2.openStudent(is_app, this, ReturnStu, false);		
			}
			private function ReturnStu(p_row:Object):void{				
				Fun.setItem(studentName, p_row.cName + " " + p_row.eName);
				idw_master.setItem(studentSn, p_row.sn, true);
				idw_master.setItem(classLeavesSn, p_row.classLeavesSn, true);
			}
			private function afterOpen(p_data:Object):void{
				serialNoFI.visible = true;				
				sumOfMoney.text = "";
				
				//清除搜尋資料
				Fun.setItem(accCode,"");
				Fun.setItem(accName,"");
				grid_query.dataProvider = new ArrayCollection();
				
				switch (p_data.fun){
					case "C":
						var t_date:Date = new Date();
						idw_master.setItem(cYear, int(t_date.fullYear), true);
						idw_master.setItem(cMonth, int(t_date.month + 1), true);
						
						serialNoFI.visible = false;
						break;
					case "U":
					case "V":
						sumOfMo(p_data);
						break;
				}
				
				SchStu.visible = true;
				SelFun0.visible = true;
				SelFun1.visible = true;
				SelFun2.visible = true;
				SelFun3.visible = true;
				grid_query.visible = true;				
				btnDelete.visible = true;
				switch (p_data.fun){
					case "V":						
						SchStu.visible = false;
						SelFun0.visible = false;
						SelFun1.visible = false;
						SelFun2.visible = false;
						SelFun3.visible = false;
						grid_query.visible = false;
						btnDelete.visible = false;
						break;
				}
			}
			private function whenSave(p_data:Object):Boolean{
				if (!int(Fun.getItem(cYear))){
					Fun.msg("E", iR.Emessage01);
					Fun.focusField(cYear);
					return false;
				}
				if (!int(Fun.getItem(cMonth))){
					Fun.msg("E", iR.Emessage02);
					Fun.focusField(cMonth);
					return false;
				}				
				
				idw_master.setItem(cYearMonth, String(Fun.getItem(cYear)) + ' / ' + String(Fun.getItem(cMonth)), true);
				
				switch (p_data.fun){
					case "C":
						var t_data:Object = {
							data: "AccSerialNo",
							accSysN: "AccMIncomeStu",
							accSysC: "M"
						};
						t_data = Fun.readRow(is_app, t_data);
						if (t_data){
							idw_master.setItem(serialNo, t_data.serialNo, true);
						}
						break;
				}
				
				return true;
			}
			public function sumOfM(p_event:Event):void{
				var tn_row:int = grid_AccMIncome.selectedIndex;
				
				var gmCount:int = 0;
				var ia_data:Array = [];				
				ia_data = (grid_AccMIncome.dataProvider as ArrayCollection).source;
				if (ia_data){					
					for (var i:int=0; i<ia_data.length; i++){
						if (i!=tn_row){
							gmCount = gmCount + int(ia_data[i].amounts);	
						}												
					}					
				}
				sumOfMoney.text = String(gmCount + int(p_event.target.text));
			}
			
			public function sumOfMo(p_data:Object):void{				
				var gmCount:int = 0;
				var ia_data:Array = [];				
				ia_data = (grid_AccMIncome.dataProvider as ArrayCollection).source;
				if (ia_data){					
					for (var i:int=0; i<ia_data.length; i++){
						gmCount = gmCount + int(ia_data[i].amounts);											
					}					
				}
				sumOfMoney.text = String(gmCount);
			}
			//選取資料到右邊 datagrid
			private function selectRows():void{
				var tb_findOld:Boolean = false;
				var ta_old:Array = ArrayCollection(grid_AccMIncome.dataProvider).source;
				var tn_len:int = 0;
				var tan_pos:Array = [];
				var ta_row:Array = ArrayCollection(grid_query.dataProvider).source;
				for (var i:int=0; i<ta_row.length; i++){
					if (ta_row[i].selected != 1){
						continue;
					}else if(AR.find(ta_old, "accIocSn", ta_row[i].accIocSn) != -1){
						tb_findOld = true;
						continue;
					}
					//記錄位置
					tan_pos[tn_len] = i;
					tn_len++;
					
					//寫入右邊清單
					idw_AccMIncome.addRow({accIocSn:ta_row[i].accIocSn, accIocCode:ta_row[i].accIocCode, accIocName: ta_row[i].accIocName});
				}
				
				//判斷
				if (tn_len == 0){
					if (tb_findOld){
						Fun.msg("I", iR.errSelected);
					}else{
						Fun.msg("I", iR.errNoSelect);						
					}
					return;
				}
				
				//刪除左邊資料 step -1
				var ta_query:ArrayCollection = ArrayCollection(grid_query.dataProvider);
				for (i=tn_len-1; i>=0; i--){
					ta_query.removeItemAt(tan_pos[i]);
				}
			}
			
			private function keyEnter(p_event:KeyboardEvent):void{
				if (p_event.keyCode == 13){
					findAccMTI();
				}	    	
			}
			
			private function findAccMTI():void {
				if (Fun.isFieldEmpty(accCode) && Fun.isFieldEmpty(accName)) {
					Fun.msg("I", iR.Emessage03);
					return;					
				}
				
				var t_data:Object = {
					fun: "QueryList",
					app: is_app, 
					inf: "FindAccMTI",
					data:[["accIocCode","S",accCode.text],["accIocName","S",accName.text],["accType","N",1]]
				};
				
				Fun.async(is_app, Fun.sService, t_data, findAccMTI2);
			}
			
			private function findAccMTI2(p_data:Object):void {
				if (Fun.catchResult(p_data, true, true)){
					return;
				}
				
				var ta_row:Array = p_data as Array;
				grid_query.dataProvider = new ArrayCollection(ta_row);
				Fun.msg("I", ST.format(Fun.R.findRow, [ta_row.length]));
			}
			public var fAfterSave:Function;
			private function afterSave(p_data:Object):void {
				fAfterSave(p_data);
			}
		]]>
	</fx:Script>
	<x2:Num1 id="sn" visible="false"/>
	<x2:Num1 id="classLeavesSn" visible="false"/>
	<x2:Num1 id="studentSn" visible="false"/>
	<s:TextInput id="cYearMonth" visible="false"/>
	<s:TextInput id="creator" visible="false"/>
	<s:TextInput id="createDate" visible="false"/>
	<s:TextInput id="reviser" visible="false"/>
	<s:TextInput id="reviseDate" visible="false"/>
	<s:Form x="10" y="10" width="96%">
		<s:layout> 
			<s:FormLayout gap="-8"/>
		</s:layout>
		<s:FormItem label="{iR.serialNos}:" id="serialNoFI">
			<s:Label id="serialNo" width="100%" color="#0000FF"/>
		</s:FormItem>
		<s:FormItem label="{iR.studentName} :" required="true">
			<s:HGroup>
				<s:TextInput id="studentName" editable="false"/>
				<x2:btnPick id="SchStu" click="doFindStu()"/>
			</s:HGroup>
		</s:FormItem>
		<s:FormItem label="{iR.cYearMonth} :">
			<s:HGroup>
				<s:NumericStepper minimum="1900" maximum="3000" id="cYear"/>
				<mx:Label text=" /"/>
				<s:NumericStepper minimum="1" maximum="12" id="cMonth"/>
			</s:HGroup>
		</s:FormItem>
		<s:FormItem label="{iR.sumOfMoney} :">
			<s:Label id="sumOfMoney" width="100%" color="#FF0000"/>
		</s:FormItem>
		<s:FormItem label="{iR.paidOff} :">
			<x2:DDL1 id="paidFlag" dataProvider="{ia_ynFlag}" width="100"></x2:DDL1>			
		</s:FormItem>
	</s:Form>

	
	<x2:TBar2 x="13" y="195" id="tb_AccMIncome" width="0" visible="false">
	</x2:TBar2>
	<x2:btnDeleteRow id="btnDelete" x="407" y="194" click="idw_AccMIncome.deleteRow();"/>
	<x2:DG2 id="grid_AccMIncome" x="10" y="221" width="504" height="306">
		<x2:columns><s:ArrayList>
			<s:GridColumn dataField="sn" visible="false"/>
			<s:GridColumn dataField="accMIncomeStuSn" visible="false"/>
			<s:GridColumn dataField="accIocSn" visible="false"/>
			<s:GridColumn dataField="creator" visible="false"/>
			<s:GridColumn dataField="createDate" visible="false"/>
			<s:GridColumn dataField="reviser" visible="false"/>
			<s:GridColumn dataField="reviseDate" visible="false"/>
			<s:GridColumn headerText="No." dataField="serialNo" labelFunction="serialNoLabelFunc" width="40"/>
			<s:GridColumn headerText="{iR.accIocCode}" dataField="accIocCode" width="180"/>
			<s:GridColumn headerText="{iR.accIocName}" dataField="accIocName"/>
			<s:GridColumn headerText="{iR.amounts}" dataField="amounts" width="80">
				<s:itemRenderer>
					<fx:Component><s:GridItemRenderer>
						<x2:Text2 restrict="0-9" change="outerDocument.sumOfM(event)"/>						
					</s:GridItemRenderer></fx:Component>
				</s:itemRenderer>        		         
			</s:GridColumn>
		</s:ArrayList></x2:columns>
	</x2:DG2>
	
	<s:Button id="SelFun0" x="522" y="246" width="44" height="105" label="&lt;&lt;" click="selectRows()" fontWeight="bold" buttonMode="true"/>

	<s:FormItem id="SelFun1" x="579" y="153" width="263" label="{iR.accCode} :">
		<s:TextInput id="accCode" width="160" height="25" keyDown="keyEnter(event)"/>
	</s:FormItem>
	<s:FormItem id="SelFun2" x="579" y="184" width="263" label="{iR.accName} :">
		<s:TextInput id="accName" width="160" height="25" keyDown="keyEnter(event)"/>
	</s:FormItem>
	<x2:btnRead id="SelFun3" x="806" y="194" width="82" height="25" click="findAccMTI()" toolTip="{iR.SelFun3}"/>
	<s:DataGrid id="grid_query"  x="574" y="221" width="315" height="306" requestedRowCount="4" horizontalScrollPolicy="off">			
		<s:columns><s:ArrayList>
			<s:GridColumn dataField="accIocSn" visible="false"/>
			<s:GridColumn headerText="{iR.selected}" dataField="selected" width="50">
				<s:itemRenderer><fx:Component><x2:irCenterVH>
					<x2:Check2 label=""/>
				</x2:irCenterVH></fx:Component></s:itemRenderer>
			</s:GridColumn>		   
			<s:GridColumn headerText="{iR.accIocCode}" dataField="accIocCode"/>
			<s:GridColumn headerText="{iR.accIocName}" dataField="accIocName"/>			
	   </s:ArrayList></s:columns>
	</s:DataGrid>	

	<x2:comEdit x="10" y="529" id="edit_1" fAfterOpen="afterOpen" fWhenSave="whenSave" fAfterSave="afterSave">
	</x2:comEdit>	
</s:TitleWindow>
